(()=>{"use strict";class t extends HTMLElement{constructor(){super(),this.videoElement=void 0,this.canvasElement=void 0,this.canvasCtx=void 0,this.drawingUtils=window}render(){let t=this.template();this.innerHTML=t,this.videoElement=this.querySelector(".input"),this.canvasElement=this.querySelector(".output"),this.canvasCtx=this.canvasElement.getContext("2d"),this.detection()}template(){return'<video class="input d-none"></video>\n        <canvas class="output" width="1280px" height="720px"></canvas>\n        <p></p>'}onResults(t){if(this.canvasCtx.save(),this.canvasCtx.clearRect(0,0,this.canvasElement.width,this.canvasElement.height),this.canvasCtx.drawImage(t.image,0,0,this.canvasElement.width,this.canvasElement.height),t.detections.length>0){let e=t.detections[0].boundingBox,i={x:1280*(e.xCenter-e.width/2),y:720*(e.yCenter-e.height/2),w:1280*e.width,h:720*e.height};this.querySelector("p").innerHTML=JSON.stringify(i);let n=this.canvasCtx.getImageData(i.x,i.y,i.w,i.h);this.canvasCtx.putImageData(n,0,0),this.drawingUtils.drawRectangle(this.canvasCtx,t.detections[0].boundingBox,{color:"blue",lineWidth:4,fillColor:"#00000000"})}this.canvasCtx.restore()}detection(){const t=new FaceDetection({locateFile:t=>`https://cdn.jsdelivr.net/npm/@mediapipe/face_detection/${t}`});t.setOptions({model:"short",minDetectionConfidence:.5}),t.onResults(this.onResults.bind(this)),new Camera(this.videoElement,{onFrame:async()=>{await t.send({image:this.videoElement})},width:1280,height:720}).start()}connectedCallback(){this.render()}}customElements.define("face-detection",t)})();